union CostumerMenuChoises = OrderItem | MenuItem
union SaveCookie = CookieSuccess | CookieError
type CookieError {
  message: String!
}
type CookieSuccess {
  message: String
}
type Address {
  first: String!
  secound: String!
}

type Message {
  content: String
  id: ID
  user: String
}

type OrderItem {
  orderQuantity: Int
  id: ID
  costumer: Costumer
  product: MenuItem
  restaurant: String
  _id: ID
}

type MenuSubItem {
  _id: MenuItem
}

type User {
  name: String!
  email: String!
  password: String!
  token: String!
  _id: ID!
  isAdmin: Boolean!
  restaurant: Restaurant!
}
type myArray {
  name: String!
}

type Restaurant {
  name: String
  owner: String
  description: String
  numReviews: Int
  reviews: [String]
  type: String
  images: [String]
  rating: Int
  location: Location
  _id: ID
}

type Location {
  mytype: String!
  coordinates: [Int!]
}
input LocationInput {
  mytype: String!
  coordinates: [Int!]
}
input RegisterInput {
  email: String!
  password: String!
}
type Token {
  token: String!
}
type Costumer {
  name: String
  table: Int
  email: String
  _id: ID
}
type MenuItem {
  name: String
  itemsType: String
  price: Int
  description: String
  quantity: Int
  availability: Boolean
  _id: ID
  id: ID
  restaurant: String
  category: String
  orderQuantity: Int
}
type MenuParent {
  itemName: String
  collectionType: String
  item: [MenuItem]
  restaurant: Restaurant
}
type AdminOrder {
  orderQuantity: Int
  id: ID
  costumer: Costumer
  product: MenuItem
  restaurant: String
  _id: ID
}
input MenuItemInput {
  name: String
  itemsType: String
  price: Int
  description: String
  quantity: Int
  availability: Boolean
}

type Menu {
  restaurant: Restaurant
  category: [MenuParent]
  _id: ID
}
input MenuParentInput {
  id: Int!
  itemName: String!
  collectionType: String!
  item: [MenuItemInput!]
}
input MenuItemInput {
  price: Int
  description: String
  name: String
}

# type Subscription {
#   messages: [Message]
# }

type Query {
  messages: [Message!]
  CurrentUser: User
  Restaurants: [Restaurant]
  Costumer: Costumer
  Menu(restaurant: String!): [MenuParent]
  MenuByCategory(restaurant: String!): [MenuParent]
  MenuItemByCategory(
    category: String!
    restaurant: String!
  ): [CostumerMenuChoises]
  MenuItemCount(category: String!, restaurant: String!): OrderItem
  OrderItems: OrderItem
  Orders(restaurant: String!): [OrderItem]!
  CostumerOrders(restaurant: String!): [OrderItem]!
  AdminOrders: [AdminOrder]!
}

type Mutation {
  CreateUser(email: String!, password: String!, username: String!): User!
  SignIn(email: String!, password: String!): Token!
  SignInWithGoogle(email: String!, password: String!): Token!
  UpdateUser(id: String!, email: String!): User!
  UpdatePassword(id: String!, password: String!): User!
  AddAddress(address: String!): User!
  AddRestaurant(
    name: String!
    owner: String!
    description: String!
    numReviews: Int!
    reviews: [String!]
    type: String!
    images: [String!]
    location: LocationInput!
    rating: Int!
    id: String!
  ): Restaurant!
  AddCostumer(name: String!, table: Int!, email: String!): Costumer
  FetchRestaurantsByQuery(searchQuery: String): [Restaurant]
  AddMenu(category: [MenuParentInput!], restaurant: String!): Menu
  AddMenuItem(
    category: String!
    restaurant: String!
    name: String!
    itemsType: String!
    price: Int!
    description: String!
    quantity: Int!
    availability: Boolean!
  ): MenuItem
  SignOut: String
  SignOutCostumer: String
  AddMenuCategory(
    restaurant: String!
    itemName: String!
    collectionType: String!
  ): MenuParent
  AddOrder(productId: ID!): [AdminOrder]!
  RemoveOrder(productId: ID!): [AdminOrder]!
  GetOrderItem(productId: ID!, restaurant: String!): OrderItem
  CostumerExpiry: CookieSuccess
  DeleteCostumer(costumerId: String): Costumer
  EmitSocket: OrderItem
  PostMessage(user: String!, content: String!): ID!
  GetCostumerOrders(restaurant: String!): [OrderItem]!
  UpdateMenuItems(
    restaurant: String!
    category: String!
    input: MenuItemInput
  ): MenuItem!
}
